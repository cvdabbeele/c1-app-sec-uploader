# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '38d9fcc9-8e09-4f1b-be98-38c42fcec0bb'
  imageRepository: 'cappsecuploader'
  containerRegistry: 'c1appsecuploaderregistry3.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'c1appsecuploaderregistry3b30d-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  cloudOne_imageSecurityHost: smartcheck-51-105-203-36.nip.io
  cloudOne_imageSecurityUser: administrator
  cloudOne_imageSecurityPassword: trendmicro
  cloudOne_preScanUser: administrator
  cloudOne_preScanPassword: trendmicro

  cloudOne_applicationSecurityKey: 040beea0-3efc-4699-8c95-cadf21b01545
  cloudOne_applicationSecuritySecret: 5d8b9064-caf4-4c59-8d56-ed01552ad854
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'mawinklerc1appsecuploader-1352.appcluster-default-1492'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          # Set Environment Variables for Cloud One Application Security
          - script: |
              sed -i 's|_TREND_AP_KEY|$(cloudOne_applicationSecurityKey)|' $(Pipeline.Workspace)/manifests/deployment.yml
              sed -i 's|_TREND_AP_SECRET|$(cloudOne_applicationSecuritySecret)|' $(Pipeline.Workspace)/manifests/deployment.yml
            displayName: "Configure Cloud One Application Security"
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

